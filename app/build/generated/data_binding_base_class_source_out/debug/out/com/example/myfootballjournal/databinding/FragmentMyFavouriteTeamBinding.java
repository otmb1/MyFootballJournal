// Generated by view binder compiler. Do not edit!
package com.example.myfootballjournal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myfootballjournal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyFavouriteTeamBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView myFavouriteTeamCity;

  @NonNull
  public final ImageView myFavouriteTeamImage;

  @NonNull
  public final TextView myFavouriteTeamName;

  @NonNull
  public final TextView myFavouriteTeamPoints;

  @NonNull
  public final TextView myFavouriteTeamPosition;

  @NonNull
  public final TextView myFavouriteTeamVenue;

  private FragmentMyFavouriteTeamBinding(@NonNull ScrollView rootView,
      @NonNull TextView myFavouriteTeamCity, @NonNull ImageView myFavouriteTeamImage,
      @NonNull TextView myFavouriteTeamName, @NonNull TextView myFavouriteTeamPoints,
      @NonNull TextView myFavouriteTeamPosition, @NonNull TextView myFavouriteTeamVenue) {
    this.rootView = rootView;
    this.myFavouriteTeamCity = myFavouriteTeamCity;
    this.myFavouriteTeamImage = myFavouriteTeamImage;
    this.myFavouriteTeamName = myFavouriteTeamName;
    this.myFavouriteTeamPoints = myFavouriteTeamPoints;
    this.myFavouriteTeamPosition = myFavouriteTeamPosition;
    this.myFavouriteTeamVenue = myFavouriteTeamVenue;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyFavouriteTeamBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyFavouriteTeamBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_favourite_team, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyFavouriteTeamBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.my_favourite_team_city;
      TextView myFavouriteTeamCity = ViewBindings.findChildViewById(rootView, id);
      if (myFavouriteTeamCity == null) {
        break missingId;
      }

      id = R.id.my_favourite_team_image;
      ImageView myFavouriteTeamImage = ViewBindings.findChildViewById(rootView, id);
      if (myFavouriteTeamImage == null) {
        break missingId;
      }

      id = R.id.my_favourite_team_name;
      TextView myFavouriteTeamName = ViewBindings.findChildViewById(rootView, id);
      if (myFavouriteTeamName == null) {
        break missingId;
      }

      id = R.id.my_favourite_team_points;
      TextView myFavouriteTeamPoints = ViewBindings.findChildViewById(rootView, id);
      if (myFavouriteTeamPoints == null) {
        break missingId;
      }

      id = R.id.my_favourite_team_position;
      TextView myFavouriteTeamPosition = ViewBindings.findChildViewById(rootView, id);
      if (myFavouriteTeamPosition == null) {
        break missingId;
      }

      id = R.id.my_favourite_team_venue;
      TextView myFavouriteTeamVenue = ViewBindings.findChildViewById(rootView, id);
      if (myFavouriteTeamVenue == null) {
        break missingId;
      }

      return new FragmentMyFavouriteTeamBinding((ScrollView) rootView, myFavouriteTeamCity,
          myFavouriteTeamImage, myFavouriteTeamName, myFavouriteTeamPoints, myFavouriteTeamPosition,
          myFavouriteTeamVenue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
